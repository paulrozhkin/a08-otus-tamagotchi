version: '3.4'

services:

  elasticsearch:
   container_name: elasticsearch
   image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
   ports:
    - 9200:9200
   volumes:
    - elasticsearch-data:/usr/share/elasticsearch/data
   environment:
    - xpack.monitoring.enabled=true
    - xpack.watcher.enabled=false
    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    - discovery.type=single-node
   #networks:
   # - elastic

  kibana:
   container_name: kibana
   image: docker.elastic.co/kibana/kibana:7.9.2
   ports:
    - 5601:5601
   depends_on:
    - elasticsearch
   environment:
    - ELASTICSEARCH_URL=http://elasticsearch
    #- ELASTICSEARCH_URL=http://localhost:9200
   #networks:
   # - elastic

  pgadmin:
    image: dpage/pgadmin4
    
  tamagotchi_restaurants:
    image: postgres

  order_queue:
    image: postgres  

  rabbitmq:
    image: rabbitmq:3-management-alpine  

  web.httpaggregator:
    image: ${DOCKER_REGISTRY-}webhttpaggregator
    build:
      context: .
      dockerfile: ApiGateways/Web.HttpAggregator/aggregator/Web.HttpAggregator/Dockerfile
    depends_on:
      - rabbitmq
      - elasticsearch

  orderqueue.api:
    image: ${DOCKER_REGISTRY-}orderqueueapi
    build:
      context: .
      dockerfile: Services/OrderQueue/OrderQueue.API/Dockerfile
    depends_on:
      - rabbitmq
      - order_queue

  orders.api:
    image: ${DOCKER_REGISTRY-}ordersapi
    build:
      context: .
      dockerfile: Services/Orders/Orders.API/Dockerfile
    depends_on:
      - rabbitmq

  restaurants.api:
    image: ${DOCKER_REGISTRY-}restaurantsapi
    build:
      context: .
      dockerfile: Services/Restaurants/Restaurants.API/Dockerfile
    depends_on:
      - tamagotchi_restaurants

networks:
  elastic:
    driver: bridge

volumes:
  elasticsearch-data:
  tamagotchi_restaurants_data:
  order_queue_data:
  pgadmin_data:
